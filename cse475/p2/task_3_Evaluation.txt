Task #3: Evaluation
I tested my sequential and parallel implementations on the machine "triton".

For 514 x 514 case, I got the following result:
./p2 -g 514
Sequential:	1183217913 (ns)
Parallel:	370843837 (ns)

For 1026 x 1026 case, I got the following result:
./p2 -g 1026
Sequential:	4740809608 (ns)
Parallel:	1428686175 (ns)

I also tested the speedup on other gridSizes and I summarized the following comparison table:

gridSize		5		10		50			100			200			300			514			700			900			1026
sequential(ns)	95692	379390	10691273	44112423	179518341	394287513	1183217913	2179327695	3603007808	4740809608
parallel(ns)	2573549	4268726	9969413		22991441	61350999	132835444	370843837	668990359	1086587264	1428686175
speedup(s/p)	0.037	0.089	1.072		1.919		2.926		2.968		3.191		3.258		3.316		3.318

Conclusions:
1) The best speedup I was able to achieve is around 3.3 (when 500 < gridSize < 1026).
2) When the gridSize is small (<50), the speedup effect is negative, namely the parallel implementation in fact spends 
more time to calculate results. This is because the computation task is not heavy when the gridSize is small. Thus the
parallel implementation spends more time on communications than computation. On the contrary, the sequential method doesn't
spend much time on communications between processors, it outperforms parallel methods under such circumstances.
3) But when the grideSize grows to 50, both sequential and parallel implementations reveal similar running time.
4) When the gridSize is larger than 50, the speedup grows dramatically from 1 to 3.3. The TBB features really help.
5) When the speedup ratio reaches 3.3, it remains stable. This is reasonable because the parallel capability of a certain machine
is fixed and will limit the performance of parallel implementations on the machine. The parallel capability is decided by
factors such as the number of processors, the performance of processors, etc. When the speedup ratio grows to a certain value (3.3
in this experiment), the value will not increase due to the limit of the machine.

Yi Luo